---
version: '3.8'

volumes:
  app-storage:
  app-assets:

services:
  backend:
    image: hydra-backend
    build:
      context: ./services/backend

    command: app

    volumes:
      - ./services/backend:/opt/app
      - app-storage:/mnt/storage
    
    labels:
      - traefik.http.services.backend-service.loadbalancer.server.port=3000
      - traefik.http.routers.backend.rule=PathPrefix(`/api`)
      - traefik.http.routers.backend.entrypoints=web
      - traefik.enable=true
    
    depends_on:
      - postgres
      - redis

  frontend:
    image: hydra-frontend
    build:
      context: ./services/frontend

    volumes: []
      # - app-storage:/mnt/storage
      # - ./services/frontend:/opt/app

    labels:
      - traefik.http.services.frontend-service.loadbalancer.server.port=80
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.enable=true

  # Misc Services

  traefik:
    image: public.ecr.aws/docker/library/traefik:latest
    command:
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=INFO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .letsencrypt:/letsencrypt
    ports:
      - 8080:8080
      - 80:80

  postgres:
    image: public.ecr.aws/docker/library/postgres:14
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  redis:
    image: public.ecr.aws/docker/library/redis:7
